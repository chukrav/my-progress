React Coursera ------------

Setup project:
yarn add bootstrap@4.0.0
yarn add reactstrap@5.0.0
yarn add react-popper@0.9.2

Next, open index.js file in the src folder and add the following line into the imports:
import 'bootstrap/dist/css/bootstrap.min.css';

yarn start - to start in browser.

Create react app:
https://reactjs.org/docs/create-a-new-react-app.html
https://github.com/facebook/create-react-app

npx create-react-app my-app
cd my-app
npm start

Note:
    npx on the first line is not a typo — it’s a package runner tool that comes with npm 5.2+.


---------------------------------------
React Udemy
For work with css. Prevents global use of styles ???!!! Only to it's own component!
https://styled-components.com/



=======
14:22 Tuesday, October 11, 2022
	<ul>
       {props.users.map((user) => (
         // console.log(user.name,user.age,user.id);
         <li key={user.id}>
           {user.name} ({user.age} years old)
         </li>
       ))}
    </ul>
Attension!!!  {props.users.map((user) => ( ... ))} <-round brackets in anonime function.

10. Effects, reducers and context.

=======
HOOKS: -----------------------
useEffect(()->{ ... }, [dependecies] ); Executes when dependecies changed! Not when rerendering!!!
dependecies = [] runs once. w/o dependecies runs every rerendering!
const [state, dispatchFn] = useReducer(reductFn,initialState,initFn);
const {isValid: emailIsValid } = emailState;  // Only alias!!!
	to use emailIsValid afterwards ...

SASS -----------
To install the node module to support the compilation of the Scss file to a CSS file:
	npm install --save-dev node-sass@4.7.2
	
Next open your package.json file and add:
	"scss": "node-sass -o css/ css/"
	
In order to transform the Scss file to a CSS file, type:
	npm run scss
	
================ NODE.JS Complete Guide Udemy Course =======================
nodemon installation
install nodemon as a development dependency:
  npm install --save-dev nodemon # or using yarn: yarn add nodemon -D
  npm install nodemon --save-dev # Recomended in the course.
And nodemon will be installed globally to your system path.  
  npm install -g nodemon # or using yarn: yarn global add nodemon
  
In packages.json
...
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon app.js",
    "start-server": "node app.js"
...
npm start    # With nodemon !!!
Install express:
   npm install --save express

app.js: ------

const express = require('express');
const app = express();

app.use((req,res,next) => {
	console.log("In middleware");
	next();
});

app.use((req,res,next) => {
	console.log("In second middleware");
	res.send('<h1>Hello from express!</h1>');
});

app.listen(3000);

Templates use: 
$ npm install pug

To parse form output!!!
npm install --save body-parser







