17:40 Monday, January 21, 2019 -----------
Some of The Most Important SQL Commands

    SELECT - extracts data from a database
    UPDATE - updates data in a database
    DELETE - deletes data from a database
    INSERT INTO - inserts new data into a database
    CREATE DATABASE - creates a new database
    ALTER DATABASE - modifies a database
    CREATE TABLE - creates a new table
    ALTER TABLE - modifies a table
    DROP TABLE - deletes a table
    CREATE INDEX - creates an index (search key)
    DROP INDEX - deletes an index
SELECT:
The SELECT DISTINCT statement is used to return only distinct (different) values.
SELECT DISTINCT column1, column2, ... FROM table_name; 
SELECT Country FROM Customers; - only Country column ...
SELECT DISTINCT Country FROM Customers;

The following SQL statement lists the number of different (distinct) customer countries:
SELECT COUNT(DISTINCT Country) FROM Customers;
Not working in fifox !!!
SELECT Count(*) AS DistinctCountries FROM (SELECT DISTINCT Country FROM Customers);

I am on: SQL WHERE Clause!
SELECT column1, column2, ...
FROM table_name
WHERE condition;
Example ------------------
SELECT * FROM Customers
WHERE Country='Mexico'; 

Operators in The WHERE Clause

The following operators can be used in the WHERE clause:
Operator 	Description
= 	Equal
<> 	Not equal. Note: In some versions of SQL this operator may be written as !=
> 	Greater than
< 	Less than
>= 	Greater than or equal
<= 	Less than or equal
BETWEEN 	Between a certain range
LIKE 	Search for a pattern
IN 	To specify multiple possible values for a column

The SQL AND, OR and NOT Operators
Combining AND, OR and NOT
SELECT * FROM Customers
WHERE Country='Germany' AND (City='Berlin' OR City='MÃ¼nchen'); 
SELECT * FROM Customers
WHERE NOT Country='Germany' AND NOT Country='USA'; 

ORDER BY Syntax
SELECT column1, column2, ...
FROM table_name
ORDER BY column1, column2, ... ASC|DESC; --------------

SELECT * FROM Customers
ORDER BY Country;
ORDER BY Several Columns Example: SELECT * FROM Customers ORDER BY Country, CustomerName; 
SELECT * FROM Customers
ORDER BY Country ASC, CustomerName DESC; 

The SQL INSERT INTO Statement-------------------------
INSERT INTO table_name (column1, column2, column3, ...)
VALUES (value1, value2, value3, ...); 
If you are adding values for all the columns of the table, you do not need to specify the column names
INSERT INTO table_name
VALUES (value1, value2, value3, ...); 
INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)
VALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');

INSERT INTO Customers (CustomerName, City, Country)
VALUES ('Cardinal', 'Stavanger', 'Norway');
Result:
92 	Cardinal 	null 	null  	Stavanger 	null 	Norway

SQL NULL Values --------------------
IS NULL Syntax:
SELECT column_names
FROM table_name
WHERE column_name IS NULL; 

IS NOT NULL Syntax
SELECT column_names
FROM table_name
WHERE column_name IS NOT NULL; 

SELECT CustomerName, ContactName, Address
FROM Customers
WHERE Address IS NULL;

18:29 Tuesday, January 22, 2019
I am on: SQL UPDATE Statement









